[Used for ssh connection]
00a) eval $(ssh-agent -s)
00b) ssh-add path/to/key


0. [Only once] Setup your identity
git config --global user.email "you@example.com"
git config --global user.name "Your Name"
git config core.autocrlf true  # removes warning about LF -> CRLF conversion

1. Clone
$ git clone git@github.com:tisljaricleo/repo_name.git


*** PULL ***
$ git pull


2. Add
$ git add . (all, or define filer or folders)

3. Commit
$ git commit -m "message"

4. Push
$ git push

5. Branches
	5.1 Bitbucket (If branch is already created)
		https://support.atlassian.com/bitbucket-cloud/docs/branch-a-repository/
		$ git fetch && git checkout <branch_name>
		$ git commit -m "message"
		$ git push origin <branch_name> 
	5.1 Github
		$ git branch
		$ git branch <feature_branch> 
		$ git checkout <feature_branch> 
		$ git add .  
		$ git commit -m "adding a change from the feature branch"      
		$ git checkout master
		$ git push origin <feature_branch>		
		THER CREATE PULL REQUEST ON Github


6. Solving merge branch conflicts    
	$ cd ~/<repo_directory>
	$ git pull  # on main branch
	$ git checkout <feature_branch>
	# Pull the destination branch into the source branch. At this point, pulling the destination will try to merge it with the source and reveal all the conflicts.
	$ git pull origin <destination_branch>
	- When you merge two branches with conflicts locally, you'll get conflict 
	markers in the file when you open your editor.
	- Open the file to resolve the conflict. 
	- You can do this using the command line or you can navigate to the file.
	- Resolve the conflict and save the file
	Add and commit the change.
	$ git add <filename>
	$ git commit -m'commit message'
	Push the change to the remote.
	git push origin <feature_branch>

IMPORTANT
-	Look at commits
	$ git log
-	Go back for one commit
	$ git reset --hard HEAD~1
-	Large file detected
	1. remove file from git folder
	2. $ git add .
	3. Add changes to most recent commit
		$ git commit --amend
